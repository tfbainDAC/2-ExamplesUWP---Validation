<Page  
    x:Class="Examples.Validate_2_1_Bind"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:common="using:Examples.Common"  
      xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d">
    <!-- xmlns:common="using:Examples.Common"  
    note: created folder Common and class BoolStringConverter.cs, this code was taken from SampleApp,  https://github.com/windows-toolkit/WindowsCommunityToolkit 
    -->
    <!-- xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    note: to use this, right click project,  manage Nuget Packages , install Microsoft.Toolkit.Uwp.UI
    This allows the use of the TextBoxRegEx extension facility to validate content of text box
    -->

    <Page.Resources>
        <common:BoolStringConverter x:Key="StringFormatConverter" />
        <Style x:Key="TextBoxRegexStyle"
           TargetType="TextBox">
            <!-- creates a style named TextBoxRegexStyle to syle TextBox control-->
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Background" Value = "AntiqueWhite"/>
        </Style>
        <DataTemplate x:Key="HeaderTemplate">
            <StackPanel>
                <TextBlock Text="{Binding}"
                   TextWrapping="WrapWholeWords" />
            </StackPanel>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto">
            <Grid Margin="30">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel Margin="10,10,10,0">
                    <!-- samples of textboxRegex https://docs.microsoft.com/en-us/windows/communitytoolkit/extensions/textboxregex -->
                    <!-- explanation of Regex validation https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285-->
                    <TextBlock TextWrapping="WrapWholeWords" FontSize="18" Margin="0 0 0 20">This Page shows the use of the utility TextBoxRegex, this is an extension
                    from the microsoft Communitytoolkit.  You must add the nuget package Microsoft.Toolkit.UWP.UI to your project.
                    There is built in validation functionality you can use.   See different examples below.  This page</TextBlock>
                    <TextBox Name="PhoneNumberValidator"
                 extensions:TextBoxRegex.Regex="^\s*\+?\s*([0-9][\s-]*){9,}$"
                 Header="Text box with Regex extension for phone number, validation occurs on TextChanged"
                 HeaderTemplate="{StaticResource HeaderTemplate}"
                 Style="{StaticResource TextBoxRegexStyle}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Is Valid: " />
                        <TextBlock Text="{Binding (extensions:TextBoxRegex.IsValid), ElementName=PhoneNumberValidator, Converter={StaticResource StringFormatConverter}}" />
                    </StackPanel>

                </StackPanel>

                <StackPanel Grid.Row="1"
                        Margin="10,10,10,0">

                    <TextBox Name="CharactValidator"
                 extensions:TextBoxRegex.ValidationMode="Dynamic"
                 extensions:TextBoxRegex.ValidationType="Characters"
                 Header="Text box with ValidationType=Characters, validation occurs at input with ValidationMode=Dynamic and clear only single character when value is invalid"
 		         HeaderTemplate="{StaticResource HeaderTemplate}"
                 Style="{StaticResource TextBoxRegexStyle}"
                             Text="abcdef" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Is Valid: " />
                        <TextBlock Text="{Binding (extensions:TextBoxRegex.IsValid), ElementName=CharactValidator, Converter={StaticResource StringFormatConverter}}" />
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="2"
                        Margin="10,10,10,0">
                    <TextBox Name="EmailValidator"
                 extensions:TextBoxRegex.ValidationType="Email"
                 Header="Text box with TextBoxRegex ValidationType=Email, validation occurs on TextChanged(default)"
                 HeaderTemplate="{StaticResource HeaderTemplate}"
                 Style="{StaticResource TextBoxRegexStyle}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Is Valid: " />
                        <TextBlock Text="{Binding (extensions:TextBoxRegex.IsValid), ElementName=EmailValidator, Converter={StaticResource StringFormatConverter}}" />
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="3"
                  Margin="10,10,10,0">
                    <TextBox Name="DecimalValidatorForce"
                 extensions:TextBoxRegex.ValidationMode="Forced"
                 extensions:TextBoxRegex.ValidationType="Decimal"
                 Header="Text box with ValidationType=Decimal, validation occurs on TextChanged and force occurs on lose focus with ValidationMode=Force (333,111 or 333.111)"
                 HeaderTemplate="{StaticResource HeaderTemplate}"
                 Style="{StaticResource TextBoxRegexStyle}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Is Valid: " />
                        <TextBlock Text="{Binding (extensions:TextBoxRegex.IsValid), ElementName=DecimalValidatorForce, Converter={StaticResource StringFormatConverter}}" />
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="4"
                        Margin="10,10,10,0">
                    <TextBox Name="NumberValidatorDynamic"
                 extensions:TextBoxRegex.ValidationMode="Dynamic"
                 extensions:TextBoxRegex.ValidationType="Number"
                 Header="Text box with ValidationType=Number, validation occurs at input with ValidationMode=Dynamic and clear only single character when value is invalid"
                 HeaderTemplate="{StaticResource HeaderTemplate}"
                 Style="{StaticResource TextBoxRegexStyle}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Is Valid: " />
                        <TextBlock Text="{Binding (extensions:TextBoxRegex.IsValid), ElementName=NumberValidatorDynamic, Converter={StaticResource StringFormatConverter}}" />
                    </StackPanel>
                </StackPanel>

            </Grid>
        </ScrollViewer>
    </Grid>
</Page>
   
    
